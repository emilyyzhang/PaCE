combined_plot
combined_plot
print(combined_plot)
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 8, height = 6)
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- plot1 + plot2 + plot_layout(ncol = 2)
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 18, height = 6)
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
# filtered_data <- filtered_data %>% filter(Method %in% best_methods)
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1))) & theme(legend.position = "right")
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 18, height = 6)
# Define the PDF file path where all plots will be saved
pdf_file_path <- paste0(results_path, "/all_plots_5_12_noribbon.pdf")
pdf(pdf_file_path, width = 8, height = 4)
for(unit in unique(results$Unit)) {
for(adaptive in unique(results$`Adaptive Treatment`)) {
for(effect_function in unique(results$`Treatment Effect Function`)) {
# Plot for general performance
p <- plot_data(results, unit, adaptive, effect_function, FALSE)
print(p)
# # Plot for treated only performance
# p_treated <- plot_data(results, unit, adaptive, effect_function, TRUE)
# print(p_treated)
}
}
}
# Close the PDF device
dev.off()
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
filtered_data <- filtered_data %>% filter(Method %in% best_methods)
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1))) & theme(legend.position = "right")
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 18, height = 6)
# Define the PDF file path where all plots will be saved
pdf_file_path <- paste0(results_path, "/all_plots_5_12_noribbon.pdf")
pdf(pdf_file_path, width = 8, height = 4)
for(unit in unique(results$Unit)) {
for(adaptive in unique(results$`Adaptive Treatment`)) {
for(effect_function in unique(results$`Treatment Effect Function`)) {
# Plot for general performance
p <- plot_data(results, unit, adaptive, effect_function, FALSE)
print(p)
# # Plot for treated only performance
# p_treated <- plot_data(results, unit, adaptive, effect_function, TRUE)
# print(p_treated)
}
}
}
# Close the PDF device
dev.off()
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1)))
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 18, height = 6)
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 16, height = 6)
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
filtered_data <- filtered_data %>% filter(Method %in% best_methods)
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
# title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
title_text <- paste0(adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1)))
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 16, height = 6)
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
filtered_data <- filtered_data %>% filter(Method %in% best_methods)
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "Non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
# title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
title_text <- paste0(adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1)))
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 16, height = 6)
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 15, height = 5)
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
filtered_data <- filtered_data %>% filter(Method %in% best_methods)
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "Non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
# title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
title_text <- paste0(adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1)))
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 15, height = 5)
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
filtered_data <- filtered_data %>% filter(Method %in% best_methods)
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "Non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
# title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
title_text <- paste0(adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1)))
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 15, height = 5)
library(ggplot2)
library(dplyr)
library(purrr)
library(readr)
library(rlang)
library(stringr)
library(patchwork)
library(extrafont)
font_import()
# Clear the environment
rm(list = ls())
# Assuming the path and file list setup as earlier:
results_path <- "results/"
file_list <- list.files(path = results_path, pattern = "*.csv", full.names = TRUE)
results <- file_list %>%
map_dfr(read_csv)
plot_data <- function(results, unit, adaptive, effect_function, treated_only = FALSE, show_legend = TRUE) {
metric <- ifelse(treated_only, "NMAE Treated Only", "NMAE")
filtered_data <- results %>%
filter(Unit == unit, `Adaptive Treatment` == adaptive, `Treatment Effect Function` == effect_function)
if (!treated_only) {
filtered_data <- filtered_data %>% filter(Method != "MCNNM")
}
best_methods <- c("My Estimator", "LinearDML", "Causal Forest (R)", "DML", "XLearner")
filtered_data <- filtered_data %>%
filter(Method %in% best_methods) %>%
mutate(Method = case_when(
Method == "Causal Forest (R)" ~ "Causal Forest",
Method == "My Estimator" ~ "Panel Clustering",
TRUE ~ Method
))
# Calculate mean NMAE for each Fraction Treated and Method
means <- filtered_data %>%
group_by(`Fraction Treated`, Method) %>%
summarise(mean_nmae = mean(!!sym(metric), na.rm = TRUE),
upper_ci = quantile(!!sym(metric), prob=.75, na.rm = TRUE),
lower_ci = quantile(!!sym(metric), prob=.25, na.rm = TRUE),
num_instances = n())
# Adjust the unit for the title
unit_label <- switch(unit,
"CLIENT_ZIP" = "SNAP",
"State Name" = "STATE",
"County Name" = "COUNTY",
unit)  # Default to the original unit if no match
# Construct the title of the graph
adaptive_text <- if (adaptive) "Adaptive Treatment" else "Non-Adaptive Treatment"
treated_text <- if (treated_only) " (Treated Only)" else ""
# title_text <- paste0(unit_label, ": ", adaptive_text, " with ", str_to_title(effect_function), " Effect")
title_text <- paste0(adaptive_text, " with ", str_to_title(effect_function), " Effect")
filename <- paste0(title_text, ".pdf")
# Determine the y-axis limit
max_y <- max(means$mean_nmae, na.rm = TRUE)
y_limit <- ifelse(max_y > 1, 1, max_y)
# Plot the means data
p <- ggplot(means, aes(x = `Fraction Treated`, y = mean_nmae, color = Method)) +
geom_point(size = 4, shape = 21, fill = "white", stroke = 1.2) +  # Points for mean NMAE
geom_line(aes(group = Method), size = 1.5) +  # Lines connecting mean points
# geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, group = Method, fill = Method), alpha = 0.2, color=NA)+
labs(title = title_text,
x = "Proportion Treated",
y = "Average nMAE") +
theme_minimal() +
theme(
text = element_text(family = "Times New Roman", size = 18),  # Increased text size
plot.title = element_text(hjust = 0.5, size = 20),  # Increased and bold title size
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = ifelse(show_legend, "right", "none"),  # Conditional legend position
legend.key = element_blank(),  # Remove legend key background
panel.grid.major = element_line(color = "gray80", size = 0.5),  # Light gray major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
) +
scale_color_brewer(palette = "Set1") + # Use colorblind-friendly palette
ylim(0, y_limit)
ggsave(filename, plot = p, device = "pdf", width = 8, height = 6)
return(p)
}
# Create plot for paper
plot1 <- plot_data(results, "CLIENT_ZIP", FALSE, "additive", FALSE, FALSE)  # without legend
plot2 <- plot_data(results, "CLIENT_ZIP", FALSE, "multiplicative", FALSE, TRUE)  # with legend
# Combine plots
combined_plot <- (plot1 + plot2 + plot_layout(ncol = 2, widths = c(1, 1)))
ggsave('combined_plot.pdf', plot = combined_plot, device = "pdf", width = 15, height = 5)
# Clear the environment
rm(list = ls())
